package registeredmodel

type RegisteredModelResponse struct {
	RegisteredModel RegisteredModel `json:"registered_model" description:"Registered model metadata."`
}

type RegisteredModel struct {
	Name                 string                 `json:"name" description:"Unique name for the model."`
	CreationTimestamp    int64                  `json:"creation_timestamp" description:"Timestamp recorded when this registered_model was created."`
	LastUpdatedTimestamp int64                  `json:"last_updated_timestamp" description:"Timestamp recorded when metadata for this registered_model was last updated."`
	UserID               string                 `json:"user_id" description:"User that created this registered_model NOTE: this field is not currently returned."`
	Description          string                 `json:"description" description:"Description of this registered_model."`
	LatestVersions       []ModelVersion         `json:"latest_versions" description:"Latest versions of the model."`
	Tags                 []RegisteredModelTag   `json:"tags" description:"Tags associated with the registered model."`
	Aliases              []RegisteredModelAlias `json:"aliases" description:"Aliases associated with the registered model."`
}

type ModelVersion struct {
	Name                 string             `json:"name" description:"Unique name of the model."`
	Version              string             `json:"version" description:"Modelâ€™s version number."`
	CreationTimestamp    any                `json:"creation_timestamp" description:"Timestamp recorded when this model_version was created."`
	LastUpdatedTimestamp any                `json:"last_updated_timestamp" description:"Timestamp recorded when metadata for this model_version was last updated."`
	UserID               string             `json:"user_id" description:"User that created this model_version."`
	CurrentStage         string             `json:"current_stage" description:"Current stage for this model_version."`
	Description          string             `json:"description" description:"Description of this model_version."`
	Source               string             `json:"source" description:"URI indicating the location of the source model artifacts, used when creating model_version."`
	RunID                string             `json:"run_id" description:"MLflow run ID used when creating model_version, if source was generated by an experiment run stored in MLflow tracking server."`
	Status               ModelVersionStatus `json:"status" description:"Current status of the model version."`
	StatusMessage        string             `json:"status_message" description:"Details on current status, if it is pending or failed."`
	Tags                 []ModelVersionTag  `json:"tags" description:"Tags associated with the model version."`
	RunLink              string             `json:"run_link" description:"Run Link: Direct link to the run that generated this version. This field is set at model version creation time only for model versions whose source run is from a tracking server that is different from the registry server."`
	Aliases              []string           `json:"aliases" description:"Aliases associated with the model version."`
}

type ModelVersionStatus string

const (
	PendingRegistration ModelVersionStatus = "PENDING_REGISTRATION"
	FailedRegistration  ModelVersionStatus = "FAILED_REGISTRATION"
	Ready               ModelVersionStatus = "READY"
)

type ModelVersionTag struct {
	Key   string `json:"key" description:"The tag key."`
	Value string `json:"value" description:"The tag value."`
}

type RegisteredModelTag struct {
	Key   string `json:"key" description:"The tag key."`
	Value string `json:"value" description:"The tag value."`
}

type RegisteredModelAlias struct {
	Key   string `json:"key" description:"The alias key."`
	Value string `json:"value" description:"The alias value."`
}
