{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Simple wrapper around MLFlow API for Krateo Operator Generator (KOG)",
        "title": "MLFlow Plugin API for Krateo Operator Generator (KOG)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Krateo Support",
            "url": "https://krateo.io",
            "email": "contact@krateoplatformops.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/2.0/mlflow/experiments/get": {
            "get": {
                "description": "Get metadata for an experiment",
                "produces": [
                    "application/json"
                ],
                "summary": "Get metadata for an experiment",
                "operationId": "get-experiment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the associated experiment",
                        "name": "experiment_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/experiment.Experiment"
                        }
                    }
                }
            }
        },
        "/2.0/mlflow/model-versions/create": {
            "post": {
                "description": "Create a new model version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new model version",
                "operationId": "create-model-version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/2.0/mlflow/model-versions/get": {
            "get": {
                "description": "Get metadata for a model version",
                "produces": [
                    "application/json"
                ],
                "summary": "Get metadata for a model version",
                "operationId": "get-model-version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the registered model",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Model version number",
                        "name": "version",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/2.0/mlflow/registered-models/get": {
            "get": {
                "description": "Get metadata for a registered model",
                "produces": [
                    "application/json"
                ],
                "summary": "Get metadata for a registered model",
                "operationId": "get-registered-model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registered model unique name identifier",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/2.0/mlflow/runs/create": {
            "post": {
                "description": "Create a new run",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new run",
                "operationId": "create-run",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/run.Run"
                        }
                    }
                }
            }
        },
        "/2.0/mlflow/runs/get": {
            "get": {
                "description": "Get metadata for a run",
                "produces": [
                    "application/json"
                ],
                "summary": "Get metadata for a run",
                "operationId": "get-run",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the associated run",
                        "name": "run_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/run.Run"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "experiment.Experiment": {
            "type": "object",
            "properties": {
                "artifact_location": {
                    "type": "string"
                },
                "creation_time": {},
                "experiment_id": {
                    "type": "string"
                },
                "last_update_time": {},
                "lifecycle_stage": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/experiment.ExperimentTag"
                    }
                }
            }
        },
        "experiment.ExperimentTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "run.DatasetInput": {
            "type": "object",
            "properties": {
                "dataset_id": {
                    "type": "string"
                },
                "dataset_name": {
                    "type": "string"
                }
            }
        },
        "run.Metric": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "run.Param": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "run.Run": {
            "type": "object",
            "properties": {
                "artifact_uri": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/run.RunData"
                },
                "end_time": {},
                "experiment_id": {
                    "type": "string"
                },
                "info": {
                    "$ref": "#/definitions/run.RunInfo"
                },
                "inputs": {
                    "$ref": "#/definitions/run.RunInputs"
                },
                "lifecycle_stage": {
                    "type": "string"
                },
                "run_id": {
                    "type": "string"
                },
                "run_name": {
                    "type": "string"
                },
                "run_uuid": {
                    "type": "string"
                },
                "start_time": {},
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "run.RunData": {
            "type": "object",
            "properties": {
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/run.Metric"
                    }
                },
                "params": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/run.Param"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/run.RunTag"
                    }
                }
            }
        },
        "run.RunInfo": {
            "type": "object",
            "properties": {
                "artifact_uri": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer"
                },
                "experiment_id": {
                    "type": "string"
                },
                "lifecycle_stage": {
                    "type": "string"
                },
                "run_id": {
                    "type": "string"
                },
                "run_name": {
                    "type": "string"
                },
                "run_uuid": {
                    "type": "string"
                },
                "start_time": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "run.RunInputs": {
            "type": "object",
            "properties": {
                "dataset_inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/run.DatasetInput"
                    }
                }
            }
        },
        "run.RunTag": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}